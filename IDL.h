/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _IDL_H_RPCGEN
#define _IDL_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct timespec_IDL {
	long tv_sec;
	long tv_nsec;
};
typedef struct timespec_IDL timespec_IDL;

struct stat_IDL {
	uint32_t st_dev;
	uint32_t st_ino;
	uint32_t st_mode;
	uint32_t st_nlink;
	uint32_t st_uid;
	uint32_t st_gid;
	uint32_t st_rdev;
	uint32_t st_size;
	uint32_t st_blksize;
	uint32_t st_blocks;
	struct timespec_IDL st_atim;
	struct timespec_IDL st_mtim;
	struct timespec_IDL st_ctim;
};
typedef struct stat_IDL stat_IDL;

struct fuse_file_info_IDL {
	int flags;
	u_int writepage;
	u_int direct_io;
	u_int keep_cache;
	u_int flush;
	u_int nonseekable;
	u_int cache_readdir;
	u_int padding;
	uint64_t fh;
	uint64_t lock_owner;
	uint32_t poll_events;
};
typedef struct fuse_file_info_IDL fuse_file_info_IDL;

struct getattr_IDL {
	char *path;
	struct stat_IDL *statbuf;
};
typedef struct getattr_IDL getattr_IDL;

struct mkdir_IDL {
	char *path;
	uint32_t mode;
};
typedef struct mkdir_IDL mkdir_IDL;

struct rmdir_IDL {
	char *path;
};
typedef struct rmdir_IDL rmdir_IDL;

struct open_IDL {
	char *path;
	struct fuse_file_info_IDL *fi;
};
typedef struct open_IDL open_IDL;

struct read_IDL {
	char *path;
	char *buf;
	uint32_t size;
	uint32_t offset;
	struct fuse_file_info *fi;
};
typedef struct read_IDL read_IDL;

struct write_IDL {
	char *path;
	char *buf;
	uint32_t size;
	uint32_t offset;
	struct fuse_file_info *fi;
};
typedef struct write_IDL write_IDL;

struct opendir_IDL {
	char *path;
	struct fuse_file_info_IDL *fi;
};
typedef struct opendir_IDL opendir_IDL;

struct readdir_IDL {
	char *path;
	char *buf;
	uint32_t offset;
	struct fuse_file_info_IDL *fi;
};
typedef struct readdir_IDL readdir_IDL;

#define NFS_FUSE 123789456
#define NFS_FUSE_VERS 9

#if defined(__STDC__) || defined(__cplusplus)
#define GETATTR 1
extern  int * getattr_9(getattr_IDL *, CLIENT *);
extern  int * getattr_9_svc(getattr_IDL *, struct svc_req *);
#define MKDIR 2
extern  int * mkdir_9(mkdir_IDL *, CLIENT *);
extern  int * mkdir_9_svc(mkdir_IDL *, struct svc_req *);
#define RMDIR 3
extern  int * rmdir_9(rmdir_IDL *, CLIENT *);
extern  int * rmdir_9_svc(rmdir_IDL *, struct svc_req *);
#define OPEN 4
extern  int * open_9(open_IDL *, CLIENT *);
extern  int * open_9_svc(open_IDL *, struct svc_req *);
#define READ 5
extern  int * read_9(read_IDL *, CLIENT *);
extern  int * read_9_svc(read_IDL *, struct svc_req *);
#define WRITE 6
extern  int * write_9(write_IDL *, CLIENT *);
extern  int * write_9_svc(write_IDL *, struct svc_req *);
#define OPENDIR 7
extern  int * opendir_9(opendir_IDL *, CLIENT *);
extern  int * opendir_9_svc(opendir_IDL *, struct svc_req *);
#define READDIR 8
extern  int * readdir_9(readdir_IDL *, CLIENT *);
extern  int * readdir_9_svc(readdir_IDL *, struct svc_req *);
extern int nfs_fuse_9_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define GETATTR 1
extern  int * getattr_9();
extern  int * getattr_9_svc();
#define MKDIR 2
extern  int * mkdir_9();
extern  int * mkdir_9_svc();
#define RMDIR 3
extern  int * rmdir_9();
extern  int * rmdir_9_svc();
#define OPEN 4
extern  int * open_9();
extern  int * open_9_svc();
#define READ 5
extern  int * read_9();
extern  int * read_9_svc();
#define WRITE 6
extern  int * write_9();
extern  int * write_9_svc();
#define OPENDIR 7
extern  int * opendir_9();
extern  int * opendir_9_svc();
#define READDIR 8
extern  int * readdir_9();
extern  int * readdir_9_svc();
extern int nfs_fuse_9_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_timespec_IDL (XDR *, timespec_IDL*);
extern  bool_t xdr_stat_IDL (XDR *, stat_IDL*);
extern  bool_t xdr_fuse_file_info_IDL (XDR *, fuse_file_info_IDL*);
extern  bool_t xdr_getattr_IDL (XDR *, getattr_IDL*);
extern  bool_t xdr_mkdir_IDL (XDR *, mkdir_IDL*);
extern  bool_t xdr_rmdir_IDL (XDR *, rmdir_IDL*);
extern  bool_t xdr_open_IDL (XDR *, open_IDL*);
extern  bool_t xdr_read_IDL (XDR *, read_IDL*);
extern  bool_t xdr_write_IDL (XDR *, write_IDL*);
extern  bool_t xdr_opendir_IDL (XDR *, opendir_IDL*);
extern  bool_t xdr_readdir_IDL (XDR *, readdir_IDL*);

#else /* K&R C */
extern bool_t xdr_timespec_IDL ();
extern bool_t xdr_stat_IDL ();
extern bool_t xdr_fuse_file_info_IDL ();
extern bool_t xdr_getattr_IDL ();
extern bool_t xdr_mkdir_IDL ();
extern bool_t xdr_rmdir_IDL ();
extern bool_t xdr_open_IDL ();
extern bool_t xdr_read_IDL ();
extern bool_t xdr_write_IDL ();
extern bool_t xdr_opendir_IDL ();
extern bool_t xdr_readdir_IDL ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_IDL_H_RPCGEN */
